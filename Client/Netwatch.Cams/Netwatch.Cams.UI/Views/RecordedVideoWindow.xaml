<Window x:Class="Netwatch.Cams.UI.Views.RecordedVideoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Netwatch.Cams.UI.Views"
        xmlns:ctrl="clr-namespace:Netwatch.Cams.UI.UserControls"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        DataContext="{Binding Source={StaticResource mainViewModelLocator},  Path=RecordedVideoViewModel}"
        Title="Recorded Video" Height="350" Width="430" WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="200"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <ListBox Grid.Column="0"  Grid.Row="0"  ItemsSource="{Binding Path=Cameras, Mode=TwoWay}" SelectedItem="{Binding SelectedCamera, Mode=TwoWay}" Cursor="Hand" BorderThickness="0" BorderBrush="Transparent" Margin="10">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <RadioButton GroupName="r" IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                        <RadioButton.Content>
                            <TextBlock Text="{Binding name}" Margin="5">
                            </TextBlock>
                        </RadioButton.Content>
                    </RadioButton>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Grid Grid.Column="1" Grid.Row="0" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Date" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center"/>
            <TextBlock Text="Time" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center"/>
            <TextBlock Text="Duration" Grid.Column="0" Grid.Row="2" VerticalAlignment="Center"/>
            <DatePicker Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Width="130" SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged}"/>
            <ctrl:TimePicker Value="{Binding StartTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" Height="30" Width="130" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <ctrl:DurationPicker Value="{Binding DurationTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="2" Height="30" Width="170" VerticalAlignment="Center" HorizontalAlignment="Left"/>
        </Grid>
        <Button Content="Get Video" Grid.Column="0" Grid.Row="1" Width="100" Height="25" Margin="10">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding GetImageCommand}"	/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button Content="Play Downloaded Video" Grid.Column="1" Grid.Row="1" Width="200" Height="25" Margin="10">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding GetImageCommand}"	/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <Button Content="Close" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Width="100" Height="25" Margin="10">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding CloseCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>

    </Grid>
</Window>
